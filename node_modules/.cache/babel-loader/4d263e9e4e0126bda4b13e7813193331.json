{"ast":null,"code":"const initialState = {\n  user: []\n};\nexport const Redit = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"GETIT\":\n      return { ...state,\n        user: payload\n      };\n\n    case \"POST\":\n      return { ...state,\n        user: [state.user, payload]\n      };\n\n    case \"DELETE\":\n      return { ...state,\n        user: state.user.filter(el => el.id !== payload.id)\n      };\n\n    default:\n      return initialState;\n  }\n};\n_c = Redit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Redit\");","map":{"version":3,"sources":["/home/nassim/Desktop/besmeleh/src/reducer.js"],"names":["initialState","user","Redit","state","action","type","payload","filter","el","id"],"mappings":"AAAA,MAAMA,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAC;AADW,CAApB;AAGA,OAAO,MAAMC,KAAK,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBH,YAAwB;AAAA,MAAVI,MAAU;AAChD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAOC,IAAP;AACI,SAAK,OAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFF,QAAAA,IAAI,EAACK;AAFH,OAAN;;AAID,SAAK,MAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAC,CAACE,KAAK,CAACF,IAAP,EAAYK,OAAZ;AAFH,OAAN;;AAIA,SAAK,QAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAACE,KAAK,CAACF,IAAN,CAAWM,MAAX,CAAkBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUH,OAAO,CAACG,EAA1C;AAFH,OAAN;;AAKP;AACF,aAAQT,YAAR;AAlBN;AAoBH,CAtBM;KAAME,K","sourcesContent":["const initialState ={\n    user:[]\n}\nexport const Redit = (state=initialState, action) =>{\n    const { type, payload } = action;\n    switch(type){\n        case \"GETIT\":\n            return{\n                ...state,\n                user:payload\n            }\n           case \"POST\":\n               return{\n                   ...state,\n                   user:[state.user,payload]\n               }\n               case \"DELETE\":\n                   return{\n                       ...state,\n                       user:state.user.filter(el => el.id !== payload.id)\n                       \n                   }\n            default:\n          return  initialState  \n    }\n}"]},"metadata":{},"sourceType":"module"}